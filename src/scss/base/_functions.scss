@use "sass:map";
@use "sass:math";
@use "variables" as *;

// ==========================================================================
// px-to-rem
//
// px-to-rem() takes an number (without units) as a parameter and calculates
// the correct number of rems for the desired size in pixels.
// ==========================================================================
@function px-to-rem($number) {
  $raw: math.div($number, $font-size-base);
  $rounded: math.div(math.ceil($raw * 1000), 1000);
  @return $rounded * 1rem;
}

// ==========================================================================
// z(layer-name)
// Based off $z-layers map found int _variables.scss
// Use like `z-index: z(under)`;
// ==========================================================================
@function z($layer) {
  @if not map.has-key($z-layers, $layer) {
    // sass-lint:disable no-warn
    // Preventing the linter from interpretting this as a warning just
    // beacuse it exists in this file, haha.
    @warn "No layer found for `#{$layer}` in $z-layers map.";
    // sass-lint:enable no-warn
  }

  @return map.get($z-layers, $layer);
}

// ==========================================================================
// Strip unit
// ==========================================================================
@function strip-units($number) {
  @return math.div($number, ($number * 0 + 1));
}

// ==========================================================================
// Spacing
// ==========================================================================
@function units($unit) {
  $unit: strip-units(map.get($spacing, $unit));
  @return px-to-rem($unit);
}
